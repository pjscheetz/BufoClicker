"use strict";(self.webpackChunkbufo_clicker=self.webpackChunkbufo_clicker||[]).push([[98],{98:(e,o,t)=>{t.r(o),t.d(o,{default:()=>M,events:()=>m,events_debug:()=>G,explorer:()=>A,gameCore:()=>f,gameLoop:()=>h,generator_debug:()=>E,generators:()=>S,help:()=>D,inspect:()=>C,logging:()=>B,performance:()=>$,reset:()=>U,resources:()=>x,save:()=>_,state:()=>b,time:()=>w,ui:()=>v,upgrade_debug:()=>L,upgrades:()=>k});var s=t(393),a=t(794),r=t(634),l=t(43),n=t(437),g=t(957),c=t(474),u=t(205),d=t(832),i=t(628),p=t(889);const b=(0,s.b)(),m=(0,a.J)(),f=(0,r.a)(),h=(0,l.h)(),v=(0,n.Q)(),S=(0,g.B)(),k=(0,c.Z)(),A=(0,u.F)(),_={save:()=>(0,d.KN)(),load:()=>(0,d.d5)(),export:()=>(0,d.ki)(),import:e=>(0,d.bB)(e)},w={pause:()=>h.stop(),resume:()=>h.start(),setTimeScale:e=>h.setTimeScale(e),getTimeScale:()=>h.getTimeScale()},x={add:e=>{const o=b.getState();return b.setState({resources:{bufos:o.resources.bufos+e,totalBufos:o.resources.totalBufos+e}}),o.resources.bufos+e},set:e=>(b.setState({resources:{bufos:e,totalBufos:Math.max(e,b.getState().resources.totalBufos)}}),e),get:()=>{const e=b.getState();return{bufos:e.resources.bufos,totalBufos:e.resources.totalBufos}}},C={state:()=>b.getState(),generators:()=>S.getAllGenerators(),upgrades:()=>({purchased:k.getPurchasedUpgrades(),available:k.getAvailableUpgrades()}),explorer:()=>A.getExplorer(),production:()=>S.getProductionStats()},G={enableDebug:()=>m.setDebugMode(!0),disableDebug:()=>m.setDebugMode(!1),listEvents:()=>m.getEventNames(),emit:(e,o)=>m.emit(e,o)},B={setLevel:e=>i.He(e),getLevel:()=>i.XM(),enableTimestamps:e=>i.Ti(e),enableConsoleColors:e=>i.lJ(e)},E={unlockAll:()=>(S.getAllGenerators().forEach((e=>{e.unlocked||b.setState({generators:{[e.id]:{unlocked:!0,enabled:!0}}})})),"All generators unlocked"),give:(e,o=1)=>{const t=b.getState();if(!Object.values(p.I2).includes(e))return`Generator ${e} not found - valid types are: ${Object.values(p.I2).join(", ")}`;const s=e,a=t.generators[s];return a?(b.setState({generators:{[s]:{count:a.count+o}}}),S.recalculateGenerator(s),`Added ${o} ${a.name} generators`):`Generator ${e} exists in enum but not in state - this is an error`}},L={unlockAll:()=>{const e=k.getAvailableUpgrades(),o=(k.getPurchasedUpgrades(),b.getState());return b.setState({upgrades:{available:[...o.upgrades.available,...e.map((e=>e.id))]}}),`Unlocked ${e.length} upgrades`},purchase:e=>k.purchaseUpgrade(e,1/0).success?`Purchased upgrade ${e}`:`Failed to purchase ${e}`},U={softReset:()=>(f.resetState(),"Game state reset"),hardReset:()=>(localStorage.clear(),window.location.reload(),"Local storage cleared, reloading page")},$={measure:(e,o)=>{console.time(e);try{o()}finally{console.timeEnd(e)}}};function D(){return console.group("%cüê∏ Bufo Idle Debug Tools üê∏","color: #4CAF50; font-weight: bold;"),console.log("%cState Management:","font-weight: bold;"),console.log("- state: Access to the state manager"),console.log("- inspect: Functions to inspect game state"),console.log("- resources: Manipulate game resources"),console.log("%cGame Control:","font-weight: bold;"),console.log("- gameCore: Access to the game core"),console.log("- gameLoop: Access to the game loop"),console.log("- time: Control game time"),console.log("%cSaving/Loading:","font-weight: bold;"),console.log("- save: Save/load/export/import functions"),console.log("- reset: Reset game state"),console.log("%cDebugging:","font-weight: bold;"),console.log("- events: Event bus access"),console.log("- events_debug: Event debugging tools"),console.log("- logging: Logger configuration"),console.log("- performance: Performance measurement tools"),console.log("%cGame Mechanics:","font-weight: bold;"),console.log("- generators: Generator manager access"),console.log("- generator_debug: Generator debugging tools"),console.log("- upgrades: Upgrade manager access"),console.log("- upgrade_debug: Upgrade debugging tools"),console.log("- explorer: Explorer manager access"),console.groupEnd(),"Debug tools help displayed in console"}D();const M={state:b,events:m,gameCore:f,gameLoop:h,ui:v,generators:S,upgrades:k,explorer:A,save:_,time:w,resources:x,inspect:C,events_debug:G,logging:B,generator_debug:E,upgrade_debug:L,reset:U,performance:$,help:D}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,